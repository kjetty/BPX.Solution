@model BPX.Domain.ViewModels.RoleViewModel;

@using BPX.Utils;
@using BPX.Website.Filters.Authorize;
@using System.Reflection;

@{
    ViewData["Title"] = "Restore Role";
}

<div class="row">
    <div class="col-sm-12">
        <h5>@ViewBag.Title</h5>
    </div>
</div>

<h6>Are you sure you want to restore this?</h6>
<p></p>
<hr />

<div class="row">
    <div class="col-sm-12">
        <dl class="row">
            <dt class="col-sm-2">
                <span class="bi-at"></span>
                @Html.DisplayNameFor(model => model.RoleName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RoleName) &nbsp;
            </dd>
            <dt class="col-sm-2">
                <span class="bi-card-text"></span>
                @Html.DisplayNameFor(model => model.RoleDescription)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RoleDescription) &nbsp;
            </dd>
            <dt class="col-sm-2">
                <span class="bi-flag"></span>
                @Html.DisplayNameFor(model => model.StatusFlag)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.StatusFlag)

                @{
                    var recordStatus = typeof(RecordStatus).GetFields(BindingFlags.Static | BindingFlags.Public);

                    foreach (var item in recordStatus)
                    {
                        if (Model.StatusFlag.ToUpper().Equals(item.GetRawConstantValue().ToString().ToUpper()))
                        {
                            @Html.Raw("&nbsp;(" + @item.Name + ")")
                            ;
                        }
                    }
                }
                &nbsp;
            </dd>
            <dt class="col-sm-2">
                <span class="bi-person-circle"></span>
                @Html.DisplayNameFor(model => model.ModifiedBy)
            </dt>
            <dd class="col-sm-10">
                @ViewBag.modifiedByName &nbsp;
            </dd>
            <dt class="col-sm-2">
                <span class="bi-clock"></span>
                @Html.DisplayNameFor(model => model.ModifiedDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ModifiedDate) &nbsp;
            </dd>
        </dl>

        <form asp-action="Undelete" method="post">
            <input type="hidden" asp-for="RoleId" />
            <input type="submit" value="   Restore   " class="btn btn-primary" />
            <span style="margin: 5px 0 0 10px">
                @if (((List<int>)ViewBag.currUserPermitIds).Contains(Permits.Identity.Role.ListDeleted))
                {
                    @Html.Raw("&nbsp;&nbsp;|&nbsp;&nbsp;") <a asp-action="ListDeleted">Back to Deleted List</a>
                }
                @if (((List<int>)ViewBag.currUserPermitIds).Contains(Permits.Identity.Role.List))
                {
                    @Html.Raw("&nbsp;&nbsp;|&nbsp;&nbsp;") <a asp-action="List">Back to List</a>
                }
            </span>
        </form>
    </div>
</div>