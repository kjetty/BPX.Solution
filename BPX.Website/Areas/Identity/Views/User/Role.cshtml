@model BPX.Domain.ViewModels.UserMiniViewModel
@using System.Text.RegularExpressions

@{
	ViewData["Title"] = "User Roles";
}

<div class="row">
	<div class="col-md-12">
		<h5>@ViewBag.Title - @ViewBag.user.FirstName @ViewBag.user.LastName</h5>
	</div>
</div>

<p></p>
<hr />

<div class="row">
	<div class="col-md-12">
		<form asp-action="Role">
			@*<div asp-validation-summary="ModelOnly" class="text-danger"></div>*@
			<input type="hidden" asp-for="UserId" />
			<div class="row form-group">
				<div class="col-md-12">

					<div class="card">
						<div class="card-header">
							<input type="checkbox" id="All" style="box-shadow: 0 0 3px red;" />
							All
						</div>
						<div class="card-body">
							@Html.Raw("<table>")

							@if (ViewBag.listRoles != null)
							{
								@Html.Raw("<tr>")
								@Html.Raw("<td>")

								foreach (var itemRole in ViewBag.listRoles)
								{
									if (((IList<int>)ViewBag.listUserRoleIds).Contains(itemRole.RoleId))
									{
										<input type="checkbox" class="" name="RoleIds" value="@itemRole.RoleId" checked="checked" />
									}
									else
									{
										<input type="checkbox" class="" name="RoleIds" value="@itemRole.RoleId" />
									}

									@itemRole.RoleName
									@Html.Raw("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;")
								}

								@Html.Raw("</td>")
								@Html.Raw("</tr>")

							}

							@Html.Raw("</table>")
						</div>
					</div>
					<br />

					@*@if (ViewBag.listAreas != null)
						{
							foreach (var area in ViewBag.listAreas)
							{
								string handleArea = "handle" + area;
								string classArea = "class" + area;

								<div class="card">
									<div class="card-header">
										<input type="checkbox" id="@handleArea" style="box-shadow: 0 0 3px red;" />
										@area
									</div>
									<div class="card-body">
										@Html.Raw("<table>")

										@if (ViewBag.listRoles != null)
										{
											string prevController = string.Empty;
											string currController = string.Empty;

											foreach (var itemRole in ViewBag.listRoles)
											{
												if (itemRole.RoleArea == area)
												{
													currController = itemRole.RoleController;

													if (prevController != currController)
													{
														string handlAreaController = Regex.Replace("handle" + area + currController, @"\s", "");
														string classAreaController = Regex.Replace("class" + area + currController, @"\s", "");

														@Html.Raw("<tr>")
														@Html.Raw("<td style=\"width:175px;\">")
														<input type="checkbox" id="@handlAreaController" style="box-shadow: 0 0 3px red;" />
														@itemRole.RoleController
														@Html.Raw("</td>")
														@Html.Raw("<td style=\"padding-left:25px;\">")

														foreach (var itemRole2 in ViewBag.listRoles)
														{
															if (currController == itemRole2.RoleController)
															{
																if (((IList<int>)ViewBag.listUserRoleIDs).Contains(itemRole2.RoleID))
																{
																	<input type="checkbox" class="@classAreaController @classArea" name="RoleIDs" value="@itemRole2.RoleID" checked="checked" />
																}
																else
																{
																	<input type="checkbox" class="@classAreaController @classArea" name="RoleIDs" value="@itemRole2.RoleID" />
																}

																@itemRole2.RoleName
																@Html.Raw("&nbsp;&nbsp;")
															}
														}
														@Html.Raw("</td>")
														@Html.Raw("</tr>")
													}
												}

												prevController = currController;
											}
										}
										@Html.Raw("</table>")
									</div>
								</div>
								<br />
							}
						}*@
					<input type="submit" value="   Save   " class="btn btn-primary" />
				</div>
			</div>
		</form>
	</div>
</div>

<div>
	<a asp-action="Index">Back to List</a>
</div>

@section ScriptsAtBottom
{
	<script type="text/javascript">
        $(document).ready(function () {
            @if (ViewBag.listAreas != null)
            {
                foreach (var area in ViewBag.listAreas)
                {
                    string handleArea = "handle" + area;
                    string classArea = "class" + area;

                    @Html.Raw("$(\"#" + handleArea + "\").change(function () {\n")
                    @Html.Raw("\t$(\"." + classArea + "\").removeAttr('checked');\n")
                    @Html.Raw("\tif (this.checked) {\n")
                    @Html.Raw("\t\t$(\"." + classArea + "\").attr('checked', 'checked');\n")
                    @Html.Raw("\t}\n")
                    @Html.Raw("});\n\n")

                    @if (ViewBag.listRoles != null)
                    {
                        string prevController = string.Empty;
                        string currController = string.Empty;

                        foreach (var itemRole in ViewBag.listRoles)
                        {
                            if (itemRole.RoleArea == area)
                            {
                                currController = itemRole.RoleController;

                                if (prevController != currController)
                                {
                                    string handleAreaController = Regex.Replace("handle" + area + currController, @"\s", "");
                                    string classAreaController = Regex.Replace("class" + area + currController, @"\s", "");

                                    @Html.Raw("$(\"#" + handleAreaController + "\").change(function () {\n")
                                    @Html.Raw("\t$(\"." + classAreaController + "\").removeAttr('checked');\n")
                                    @Html.Raw("\tif (this.checked) { \n")
                                    @Html.Raw("\t\t$(\"." + classAreaController + "\").attr('checked', 'checked');\n")
                                    @Html.Raw("\t}\n")
                                    @Html.Raw("});\n\n")

                                }

                                prevController = currController;
                            }
                        }
                    }
                }
            }
        });
	</script>
}