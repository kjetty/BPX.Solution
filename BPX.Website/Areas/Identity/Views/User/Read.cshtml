@model BPX.Domain.ViewModels.UserViewModel

@using BPX.Utils;
@using BPX.Website.CustomCode.Authorize;
@using System.Reflection;

@{
	ViewData["Title"] = "User Read";
}

<div class="row">
	<div class="col-md-12">
		<h5>@ViewBag.Title</h5>
	</div>
</div>

<p></p>
<hr />

<div class="row">
	<div class="col-md-12">
		<dl class="row">
			<dt class="col-sm-2">
				<span class="bi-person"></span>
				@Html.DisplayNameFor(model => model.FirstName)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.FirstName) &nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-person-fill"></span>
				@Html.DisplayNameFor(model => model.LastName)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.LastName) &nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-envelope"></span>
				@Html.DisplayNameFor(model => model.Email)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.Email) &nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-telephone"></span>
				@Html.DisplayNameFor(model => model.Mobile)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.Mobile) &nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-flag"></span>
				@Html.DisplayNameFor(model => model.StatusFlag)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.StatusFlag)

				@{
					var recordStatus = typeof(RecordStatus).GetFields(BindingFlags.Static | BindingFlags.Public);

					foreach (var item in recordStatus)
					{
						if (Model.StatusFlag == item.GetRawConstantValue().ToString())
						{
							@Html.Raw("&nbsp;(" + @item.Name + ")");
						}
					}
				}
				&nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-person-circle"></span>
				@Html.DisplayNameFor(model => model.ModifiedBy)
			</dt>
			<dd class="col-sm-10">
				@ViewBag.modifiedByName &nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-clock"></span>
				@Html.DisplayNameFor(model => model.ModifiedDate)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.ModifiedDate) &nbsp;
			</dd>
		</dl>
	</div>
</div>

<p></p>

<div class="row">
	<div class="col-md-12">
		@if (((List<int>)ViewBag.currUserPermitIds).Contains(Permits.Identity.User.Update))
		{
			<a asp-action="Update" asp-route-id="@Model.UserId">Edit</a>
		}
		@if (((List<int>)ViewBag.currUserPermitIds).Contains(Permits.Identity.User.List))
		{
			@Html.Raw("&nbsp;&nbsp;|&nbsp;&nbsp;") <a asp-action="List">Back to List</a>
		}
	</div>
</div>