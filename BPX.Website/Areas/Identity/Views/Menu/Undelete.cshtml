@model BPX.Domain.ViewModels.MenuViewModel;

@using BPX.Utils;
@using BPX.Website.CustomCode.Authorize;
@using System.Reflection;

@{
	ViewData["Title"] = "Restore Menu";
}

<div class="row">
	<div class="col-md-12">
		<h5>@ViewBag.Title</h5>
	</div>
</div>

<h6>Are you sure you want to restore this?</h6>
<p></p>
<hr />

<div class="row">
	<div class="col-md-12">
		<dl class="row">
			<dt class="col-sm-2">
				<span class="bi-at"></span>
				@Html.DisplayNameFor(model => model.MenuName)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.MenuName) &nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-card-text"></span>
				@Html.DisplayNameFor(model => model.MenuDescription)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.MenuDescription) &nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-link"></span>
				@Html.DisplayNameFor(model => model.MenuURL)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.MenuURL) &nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-people"></span>
				@Html.DisplayNameFor(model => model.ParentMenuId)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.ParentMenuId) &nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-list-ol"></span>
				@Html.DisplayNameFor(model => model.OrderNumber)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.OrderNumber) &nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-flag"></span>
				@Html.DisplayNameFor(model => model.StatusFlag)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.StatusFlag)

				@{
					var recordStatus = typeof(RecordStatus).GetFields(BindingFlags.Static | BindingFlags.Public);

					foreach (var item in recordStatus)
					{
						if (Model.StatusFlag.Equals(item.GetRawConstantValue().ToString()))
						{
							@Html.Raw("&nbsp;(" + @item.Name + ")");
						}
					}
				}
				&nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-person-circle"></span>
				@Html.DisplayNameFor(model => model.ModifiedBy)
			</dt>
			<dd class="col-sm-10">
				@ViewBag.modifiedByName &nbsp;
			</dd>
			<dt class="col-sm-2">
				<span class="bi-clock"></span>
				@Html.DisplayNameFor(model => model.ModifiedDate)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.ModifiedDate) &nbsp;
			</dd>
		</dl>

		<form asp-action="Undelete" method="post">
			<input type="hidden" asp-for="MenuId" />
			<input type="submit" value="   Restore   " class="btn btn-primary" />
			<span style="margin: 5px 0 0 10px">
				@if (((List<int>)ViewBag.currUserPermitIds).Contains(Permits.Identity.Menu.ListDeleted))
				{
					@Html.Raw("&nbsp;&nbsp;|&nbsp;&nbsp;") <a asp-action="ListDeleted">Back to Deleted List</a>
				}
				@if (((List<int>)ViewBag.currUserPermitIds).Contains(Permits.Identity.Menu.List))
				{
					@Html.Raw("&nbsp;&nbsp;|&nbsp;&nbsp;") <a asp-action="List">Back to List</a>
				}
			</span>
		</form>
	</div>
</div>