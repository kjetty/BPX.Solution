@model BPX.Domain.ViewModels.RoleViewModel

@using BPX.Utils;
@using BPX.Website.Filters.Authorize;
@using System.Reflection;

@{
    ViewData["Title"] = "Role Read";
}

<div class="row">
    <div class="col-sm-12">
        <h5>@ViewBag.Title</h5>
    </div>
</div>

<p></p>
<hr />

<div class="row">
    <div class="col-sm-12">
        <dl class="row">
            <dt class="col-sm-2">
                <span class="bi-at"></span>
                @Html.DisplayNameFor(model => model.RoleName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RoleName) &nbsp;
            </dd>
            <dt class="col-sm-2">
                <span class="bi-card-text"></span>
                @Html.DisplayNameFor(model => model.RoleDescription)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RoleDescription) &nbsp;
            </dd>
            <dt class="col-sm-2">
                <span class="bi-flag"></span>
                @Html.DisplayNameFor(model => model.StatusFlag)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.StatusFlag)

                @{
                    var recordStatus = typeof(RecordStatus).GetFields(BindingFlags.Static | BindingFlags.Public);

                    foreach (var item in recordStatus)
                    {
                        if (Model.StatusFlag.ToUpper().Equals(item.GetRawConstantValue().ToString().ToUpper()))
                        {
                            @Html.Raw("&nbsp;(" + @item.Name + ")")
                            ;
                        }
                    }
                }
                &nbsp;
            </dd>
            <dt class="col-sm-2">
                <span class="bi-person-circle"></span>
                @Html.DisplayNameFor(model => model.ModifiedBy)
            </dt>
            <dd class="col-sm-10">
                @ViewBag.modifiedByName &nbsp;
            </dd>
            <dt class="col-sm-2">
                <span class="bi-clock"></span>
                @Html.DisplayNameFor(model => model.ModifiedDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ModifiedDate) &nbsp;
            </dd>
        </dl>
    </div>
</div>

<p></p>

<div class="row">
    <div class="col-sm-12">
        @if (((List<int>)ViewBag.currUserPermitIds).Contains(Permits.Identity.Role.Update))
        {
            <a asp-action="Update" asp-route-id="@Model.RoleId">Edit</a>
        }
        @if (((List<int>)ViewBag.currUserPermitIds).Contains(Permits.Identity.Role.List))
        {
            @Html.Raw("&nbsp;&nbsp;|&nbsp;&nbsp;") <a asp-action="List">Back to List</a>
        }
    </div>
</div>